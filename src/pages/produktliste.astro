---
//ts-nocheck
import ListeLayout from "../layouts/ListeLayout.astro";
import { apiDetails } from "../settings";
import ProductCard from "../components/ProductCard.astro"; 
import FakeNav from "../components/FakeNav.astro";

const res = await fetch(`${apiDetails.supabaseUrl}/rest/v1/produkter?select=*`, {
  headers: {
    apikey: apiDetails.supabaseAnonKey,
    Authorization: `Bearer ${apiDetails.supabaseAnonKey}`,
  },
});
const data = await res.json();
console.log("Supabase URL:", apiDetails.supabaseUrl);
console.log("Supabase anonKey:", apiDetails.supabaseAnonKey);

const headers = {
  apikey: apiDetails.supabaseAnonKey,
  Authorization: `Bearer ${apiDetails.supabaseAnonKey}`,
  Prefer: "return=representation",
};




// Deduplicate styles
const styles = [...new Set(data.map(item => item.style).filter(Boolean))].map(style => ({ style }));

// Deduplicate colors
const colors = [...new Set(data.map(item => item.color).filter(Boolean))].map(color => ({ color }));

// Deduplicate seasons
const seasons = [...new Set(data.map(item => item.season).filter(Boolean))].map(season => ({ season }));


---

<ListeLayout title="Bryllup">
  <div class="stickynav"> <FakeNav /></div>
<h1 class="text-brun-600 m-s mx-ml md:mx-xl">Bryllup</h1>

<details>
  <summary class="cursor-pointer font-semibold">Stiltype</summary>
  {styles?.length > 0 ? (
    styles
      .filter(item => item.style) // Filter out null or undefined
      .map((item) => (
        <label>
          <input type="checkbox" name="style" value={item.style} />
          {item.style}
        </label>
      ))
  ) : (
    <p>No styles available</p>
  )}
</details>

<details>
  <summary class="cursor-pointer font-semibold">Farver</summary>
  {colors?.length > 0 ? (
    colors
      .filter(item => item.color)
      .map((item) => (
        <label>
          <input type="checkbox" name="color" value={item.color} />
          {item.color}
        </label>
      ))
  ) : (
    <p>No colors available</p>
  )}
</details>

<details>
  <summary class="cursor-pointer font-semibold">SÃ¦son</summary>
  {seasons?.length > 0 ? (
    seasons
      .filter(item => item.season)
      .map((item) => (
        <label>
          <input type="checkbox" name="season" value={item.season} />
          {item.season}
        </label>
      ))
  ) : (
    <p>No seasons available</p>
  )}
</details>



<div class="flex flex-wrap md:gap-s md:m-xl justify-evenly"> 
  {data.map((product) => <ProductCard {product} /> )}
</div>
</ListeLayout>

<style>

  .stickynav {
    position: sticky;
    top: 0;
    z-index: 100;
  }
</style>